package uk.ac.cam.oda22.core.astar;

import java.awt.geom.Point2D;
import java.util.List;

/**
 * @author Oliver
 *
 */
public class AStarNode {
	
	/**
	 * The node's position.
	 */
	public final Point2D p;
	
	/**
	 * The neighbouring edges.
	 */
	public final List<AStarEdge> neighbours;
	
	/**
	 * The node's predecessor for the shortest path.
	 */
	public AStarNode predecessor;
	
	/**
	 * Whether or not the node has been discovered.
	 */
	public boolean discovered;
	
	/**
	 * To cost from the source node to this node.
	 */
	public double f;
	
	/**
	 * The heuristic cost from this node to the destination node.
	 */
	public double g;
	
	public AStarNode(Point2D p, List<AStarEdge> edges) {
		this.p = p;
		this.neighbours = edges;
	}
	
	public double calculateHeuristic(Point2D q) {
		return p.distance(q);
	}
	
}
